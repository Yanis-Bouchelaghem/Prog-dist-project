version: '3'
name: money-manager
services:

  react:
    build: frontend/
    ports:
      - "5173:5173"
    depends_on:
      - fastapi
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
    command: ["npm", "run", "dev"]
    networks:
      - default-network

  fastapi:
    build: backend/
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - ENGINE_ECHO=${ENGINE_ECHO}
    networks:
      - default-network

  postgres:
    image: postgres:16.1-alpine3.18
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - default-network

  pgadmin:
    image: dpage/pgadmin4:8.3
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_DISABLE_POSTFIX=TRUE
    volumes:
      - ./pgadmin_servers.json:/pgadmin4/servers.json
    networks:
      - default-network

volumes:
  postgres-data:


networks:
  default-network: